
==================== FINAL INTERFACE ====================
2017-06-29 05:20:14.0506195 UTC

interface regex-ftc-0.1.0.0-4o6NQxocRYX9a1nXhmykiN:Regex 8002
  interface hash: 4d573144ef7486361ec5a17071a69d07
  ABI hash: 8f57695774f5b88adac0d72fd9787549
  export-list hash: f28275d9b8f7a005a9398a6b90722c2f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 5cce583a522582862a97501daeabe24f
  sig of: Nothing
  used TH splices: False
  where
exports:
  Regex.printRe
  Regex.printRePol
  Regex.str2regex
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
5f58c4750c36ad1ad380b2a56e0a8e1e
  $fEqRegex :: GHC.Classes.Eq Regex.Regex
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Regex.Regex Regex.$fEqRegex_$c== Regex.$fEqRegex_$c/= -}
5f58c4750c36ad1ad380b2a56e0a8e1e
  $fEqRegex_$c/= :: Regex.Regex -> Regex.Regex -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Regex.Regex) (b :: Regex.Regex) ->
                 case Regex.$fEqRegex_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
5f58c4750c36ad1ad380b2a56e0a8e1e
  $fEqRegex_$c== :: Regex.Regex -> Regex.Regex -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
5f58c4750c36ad1ad380b2a56e0a8e1e
  $fShowRegex :: GHC.Show.Show Regex.Regex
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Regex.Regex
                  Regex.$fShowRegex_$cshowsPrec
                  Regex.printRe
                  Regex.$fShowRegex_$cshowList -}
5f58c4750c36ad1ad380b2a56e0a8e1e
  $fShowRegex1 :: Regex.Regex -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (x :: Regex.Regex) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.++ @ GHC.Types.Char (Regex.printRe x) s) -}
5f58c4750c36ad1ad380b2a56e0a8e1e
  $fShowRegex_$cshowList :: [Regex.Regex] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Regex.Regex]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Regex.Regex Regex.$fShowRegex1 ls s) -}
5f58c4750c36ad1ad380b2a56e0a8e1e
  $fShowRegex_$cshowsPrec ::
    GHC.Types.Int -> Regex.Regex -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Regex.Regex)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n (Regex.printRe x))
                   s) -}
bec8ff62a8a2c5826ac2d6d4f5fafb63
  $tc'Concat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17432167537256608461##
                   16493443764100409786##
                   Regex.$trModule
                   Regex.$tc'Concat1) -}
9a79a2092ed025fdcb02c01cdc341a3d
  $tc'Concat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Concat"#) -}
61ca37fa25d2231db05a733bef19a393
  $tc'Kleene :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10455430106747916741##
                   1410748018951846974##
                   Regex.$trModule
                   Regex.$tc'Kleene1) -}
4d82c04e696cadec6a089490f8152d28
  $tc'Kleene1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Kleene"#) -}
a2c69869c7d38d895a49b26a45335aec
  $tc'Lambda :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17133857922395394430##
                   16687572965044192522##
                   Regex.$trModule
                   Regex.$tc'Lambda1) -}
212e1a6308ca3c1b9794f2a6f6671f12
  $tc'Lambda1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Lambda"#) -}
ac078692644c4911d440854a79584b7f
  $tc'Lit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16758577244496889778##
                   16268197016322592837##
                   Regex.$trModule
                   Regex.$tc'Lit1) -}
afa3a2595c73a31718b92684e917b507
  $tc'Lit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Lit"#) -}
e21d27fca0607e8fb66eec1a46e6e4d6
  $tc'Union :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6312312095815857269##
                   9677230876251167765##
                   Regex.$trModule
                   Regex.$tc'Union1) -}
fe5bf95fe60ab6a1909028662af0ff31
  $tc'Union1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Union"#) -}
c935e7e7e32169f6ba73f530b54e0be0
  $tcRegex :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7383885154666601183##
                   9155476289733524574##
                   Regex.$trModule
                   Regex.$trModule1) -}
1a45d53bea181b4d039faf73eeeb0e5a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Regex.$trModule2 Regex.$trModule1) -}
862155627b0c2b89f41e108b778f3652
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Regex"#) -}
794596114b6169b710c714c89d28d5ae
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "regex-ftc-0.1.0.0-4o6NQxocRYX9a1nXhmykiN"#) -}
5f58c4750c36ad1ad380b2a56e0a8e1e
  data Regex
    = Lambda
    | Lit GHC.Types.Char
    | Union Regex.Regex Regex.Regex
    | Concat Regex.Regex Regex.Regex
    | Kleene Regex.Regex
5f58c4750c36ad1ad380b2a56e0a8e1e
  printRe :: Regex.Regex -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
2a6f5ac6196713e096ba7ab261e0ea56
  printRePol :: Regex.Regex -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
188bc04d51ef3128a6b613cce74489fc
  str2regex :: GHC.Base.String -> Regex.Regex
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: GHC.Base.String) ->
                 case Regex.str2regex_go x (GHC.Types.[] @ Regex.Regex) of wild {
                   [] -> GHC.List.badHead @ Regex.Regex : x1 ds1 -> x1 }) -}
4c493671d5f7b0bdb9009cf196d73473
  str2regex_go :: [GHC.Types.Char] -> [Regex.Regex] -> [Regex.Regex]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
instance [safe] GHC.Classes.Eq [Regex.Regex] = Regex.$fEqRegex
instance [safe] GHC.Show.Show [Regex.Regex] = Regex.$fShowRegex
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

